package com.crm.client.company;

import java.lang.reflect.Field;

/**
 * A CRM_company class. It is a master record class. It has been designed to
 * hold master record which links other objects by referencing its id variable
 * 
 * @author kbuczynski
 *
 */
public class CRM_company {
	private Integer id;
	private Integer CRM_user_master_id;
	private String company_name;

	public CRM_company() {
	}

	/**
	 * A constructor which build up a project data by populating all of its
	 * attributes. Mainly used to create a object from database result
	 * 
	 * @param id
	 *            Integer holds an unique ID number for the object
	 * @param crmUserMasterId
	 *            Integer holds an unique ID number for the object. The unique ID
	 *            references to user master id record
	 * @param companyName
	 *            String holds a company name details
	 */
	public CRM_company(Integer id, Integer crmUserMasterId, String companyName) {
		this.id = new Integer(id);
		this.CRM_user_master_id = new Integer(crmUserMasterId);
		this.company_name = new String(companyName);
	}

	/**
	 * A constructor which builds up a data by populating the variables with passed
	 * down arguments. It does not accept an ID as its not generated by database
	 * result
	 * 
	 * @param crmUserMasterId
	 *            Integer holds a unique ID number for the object. The unique ID
	 *            refrence to user master id record.
	 * @param companyName
	 *            String holds a company name details
	 */
	public CRM_company(Integer crmUserMasterId, String companyName) {
		this.CRM_user_master_id = new Integer(crmUserMasterId);
		this.company_name = new String(companyName);
	}

	@Override
	/**
	 * toString method which is a override. It creates a much more readable output
	 * of a object
	 * 
	 * @return String with a build up JSON like format output.
	 */
	public String toString() {
		StringBuilder result = new StringBuilder();
		String NEW_LINE = System.getProperty("line.separator");
		Field[] fields = this.getClass().getDeclaredFields();
		result.append(this.getClass().getName() + " Object {" + NEW_LINE);
		for (Field field : fields) {
			field.setAccessible(true);
			try {
				result.append(field.getName() + ": " + field.get(this) + " ");
			} catch (IllegalArgumentException e) {
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				e.printStackTrace();
			}
		}

		result.append("}");

		return result.toString();
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getCRM_user_master_id() {
		return CRM_user_master_id;
	}

	public void setCRM_user_master_id(Integer cRM_user_master_id) {
		CRM_user_master_id = cRM_user_master_id;
	}

	public String getCompany_name() {
		return company_name;
	}

	public void setCompany_name(String company_name) {
		this.company_name = company_name;
	}

}
